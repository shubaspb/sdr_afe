

clear all;
clc;

%%%%%%%%%%%% Интерфейс %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Выбор действия (режим):
flag_control = 1;  % 0 - генерирование входных воздействий для Test bench
                   % 1 - анализ выходных воздействий 
                   
flag_signal = 1; % ЛЧМ -1 , монохром - 0
flag_ddc = 1;    % CIC -0 , CIC+FIR - 1


%% Параметры модуля:
WIDTH_IN = 24; 
WIDTH_OUT = 24; 
D = 10;  % коэффициент децимации D=clk/clk_dec

% Параметры Test bench
Fs = 125e6;
LENGTH_IN = 10000;                          % length input signal testbench
LENGTH_OUT = 1500;                          
DELAY_module = 10; 
%INIT_COEF_COMPENSATOR = 'init_file_coef_compensator_cic_filter_tb.dat';
INPUT_FILE = 'input_tb.dat';   
INPUT_FILE_I = 'input_i_tb.dat'; 
INPUT_FILE_Q = 'input_q_tb.dat'; 
OUTPUT_FILE_I = 'output_i_tb.dat';
OUTPUT_FILE_Q = 'output_q_tb.dat'; 
OUTPUT_FILE_MAG = 'output_mag.dat'; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%% Генерирование входных воздействий %%%%%%%%%%%%%%%%%
     ampl = 0.99;
     A = ampl*(2^(WIDTH_IN-1)-1);   % максимум модуля отсчетов в таблице
     
if (flag_signal==1)
    % ======= ЛЧМ-генератор ====================
    dF = 75e6;      % Девиация
    F_chirp = 5000;  % частота качания
    F_ch_0 = -20e6;   % стартовая частота
    sig_gen = chirp_generator(LENGTH_IN , Fs , dF , F_chirp, F_ch_0 );
    sig_gen = [ zeros(1,500)  sig_gen(1:end-500) ];
else 
    F = 25e6;
    phase_gen = pi/9;
    sig_gen = cos(2*pi*F/Fs*(0:LENGTH_IN-1)+phase_gen); 
    pulse = [zeros(1,LENGTH_IN/2-100)  ones(1,100) zeros(1,LENGTH_IN/2)];
    sig_gen = sig_gen.*pulse;
end
    
    sig = sig_gen;
    sig_round = round(sig*A);
    
    

    
if (flag_control==0)
    %load input_monochrom.dat
    
    delay = 4; %4
    sig_round = [sig_round(1+delay:end) , zeros(1,delay)];
    
    Spectr(sig_round, 125e6, 50);
    
    sig_round_i = real(sig_round);
    sig_round_q = imag(sig_round);
    % ===== write input signals ========================
    input_sig = Dop_code(sig_round_i, WIDTH_IN, 0);
    write_sig(input_sig, WIDTH_IN, INPUT_FILE_I);
    input_sig = Dop_code(sig_round_q, WIDTH_IN, 0);
    write_sig(input_sig, WIDTH_IN, INPUT_FILE_Q);
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



    
%%%%%%%%%%%%%%%%%%%%%% Чтение выходов %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if (flag_control==1)
    %% Import data from workspace, which generated by test_bench
    delay_module = 5;
    sig_i_hex = importfile_hex(OUTPUT_FILE_I, delay_module, LENGTH_OUT+delay_module);
    sig_q_hex = importfile_hex(OUTPUT_FILE_Q, delay_module, LENGTH_OUT+delay_module); 
    sig_mag = importfile_hex(OUTPUT_FILE_MAG, delay_module, LENGTH_OUT+delay_module);
    % Convert data
    sig_i_dec = hex2dec(sig_i_hex);
    sig_q_dec = hex2dec(sig_q_hex);
    sig_mag = hex2dec(sig_mag);
    % Convert 2'complement code
    sig_i = Dop_code(sig_i_dec, WIDTH_OUT, 1);
    sig_q = Dop_code(sig_q_dec, WIDTH_OUT, 1);
    sig_mag = Dop_code(sig_mag, WIDTH_OUT, 1);
    
    sig_comp = sig_i + 1i*sig_q;
    Spectr(sig_comp/1e8, 20e6, 55);
    


    
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%













